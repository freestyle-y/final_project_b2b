<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.trade.mapper.ContractMapper">
	<!-- 공통사용 계약서 대상(기업회원) 정보 받아오기 -->
	<select id="getContractUser" resultType="com.example.trade.dto.Contract">
		SELECT `name` AS name, company_name AS companyName
			,address, detail_address AS detailAddress, phone
		FROM user
		WHERE id = #{userId}
	</select>
	
	<!-- 공통사용 계약서 작성자 정보 받아오기 -->
	<select id="getContractSupplier" resultType="com.example.trade.dto.Contract">
		SELECT u.`name` AS name, u.company_name AS companyName
			,u.address, u.detail_address AS detailAddress, u.phone
		FROM contract c
			INNER JOIN quotation q ON c.quotation_no = q.quotation_no
			INNER JOIN user u ON q.create_user = u.id
		WHERE c.contract_no = #{contractNo}
	</select>
	
	<!-- 관리자 계약서 목록 페이지 -->
	<select id="getAllContractList" resultType="com.example.trade.dto.Contract">
		SELECT
			 contract_no AS contractNo
			,quotation_no AS quotationNo
			,down_payment AS downPayment
			,down_payment_status AS downPaymentStatus
			,down_payment_date AS downPaymentDate
			,final_payment AS finalPayment
			,final_payment_status AS finalPaymentStatus
			,final_payment_date AS finalPaymentDate
			,create_user AS createUser
			,create_date AS createDate
		FROM contract
	</select>
	
	<!-- 관리자 계약서 상세 페이지 -->	
	<select id="getContractOneForAdmin" resultType="com.example.trade.dto.Contract">
	    SELECT 
	        c.contract_no AS contractNo,
	        c.quotation_no AS quotationNo,
	        c.down_payment AS downPayment,
	        c.final_payment AS finalPayment,
	        c.create_date AS createDate,
	        pr.product_name AS productName,
	        pr.product_option AS productOption,
	        pr.product_quantity AS productQuantity,
	        qi.price AS price,
	        q.create_date AS quotationCreateDate
	    FROM contract c
	    JOIN quotation q ON c.quotation_no = q.quotation_no
	    LEFT JOIN quotation_item qi ON q.quotation_no = qi.quotation_no
	    JOIN product_request pr 
	        ON qi.product_request_no = pr.product_request_no
	       AND qi.sub_product_request_no = pr.sub_product_request_no
	    WHERE c.contract_no = #{contractNo}
	</select>



	<!-- 관리자 화면: 계약번호로 을(수요자) 조회 -->
	<select id="getContractUserByContractNo" resultType="com.example.trade.dto.Contract">
		SELECT DISTINCT u.`name` AS name, u.company_name AS companyName
			,u.address, u.detail_address AS detailAddress, u.phone
		FROM contract c
			INNER JOIN quotation q ON c.quotation_no = q.quotation_no
			INNER JOIN product_request pr ON q.product_request_no = pr.product_request_no
			INNER JOIN `user` u ON pr.create_user = u.id
		WHERE c.contract_no = #{contractNo}
	</select>
	
		<!-- 공급자: 견적 작성자 -->
	<select id="getContractSupplierByQuotation" resultType="com.example.trade.dto.Contract">
	    SELECT u.name, u.company_name AS companyName, u.address, u.detail_address AS detailAddress, u.phone
	    FROM quotation q
	    INNER JOIN user u ON q.create_user = u.id
	    WHERE q.quotation_no = #{quotationNo}
	</select>

	<!-- 수요자: 상품 요청 작성자 -->
	<select id="getContractUserByQuotation" resultType="com.example.trade.dto.Contract">
	    SELECT u.name, u.company_name AS companyName, u.address, u.detail_address AS detailAddress, u.phone
	    FROM quotation q
	    INNER JOIN product_request pr ON q.product_request_no = pr.product_request_no
	    INNER JOIN user u ON pr.create_user = u.id
	    WHERE q.quotation_no = #{quotationNo}
	</select>
	
	<!-- 관리자 계약서 작성 -->
	<insert id="insertContract" parameterType="com.example.trade.dto.Contract" useGeneratedKeys="true" keyProperty="contractNo">
		INSERT INTO contract (
		  quotation_no, down_payment, down_payment_status,
		  final_payment, final_payment_status,
		  create_user, use_status, create_date
		) VALUES (
		  #{quotationNo}, #{downPayment}, '입금전',
		  #{finalPayment}, '입금전',
		  #{createUser}, #{useStatus}, NOW()
		)
	</insert>
	
	<!-- 관리자 계약서 수정 데이터 가져오기 -->
	<select id="getContractByContractNo" resultType="com.example.trade.dto.Contract">
		SELECT 
			contract_no AS contractNo,
			quotation_no AS quotationNo,
			down_payment AS downPayment,
			final_payment AS finalPayment,
			final_payment_date AS finalPaymentDate
		FROM contract
		WHERE contract_no = #{contractNo}
	</select>

	<!-- 관리자 계약서 수정폼 전송 -->
	<update id="updateContract" parameterType="com.example.trade.dto.Contract">
		UPDATE contract
		SET 
			 down_payment = #{downPayment}
			,final_payment = #{finalPayment}
			,down_payment_date = #{downPaymentDate}
			,final_payment_date = #{finalPaymentDate}
		WHERE contract_no = #{contractNo}
	</update>
	
	<!-- 관리자 계약서 삭제 -->
	<delete id="deleteContract">
		DELETE FROM contract
		WHERE contract_no = #{contractNo}
		AND quotation_No = #{quotationNo}
	</delete>


	<!-- 관리자 계약금 상태 입력 -->
	<update id="updateDownPayment" parameterType="com.example.trade.dto.Contract">
	    UPDATE contract
	    SET  down_payment_status = 'PS002'
	    	,down_payment_date = NOW()
	    	,final_payment_date = DATE_ADD(NOW(), INTERVAL 15 DAY)
	    WHERE contract_no = #{contractNo}
	</update>

	<!--  관리자 잔금 상태 입력 -->
	<update id="updateFinalPayment" parameterType="com.example.trade.dto.Contract">
	    UPDATE contract
	    SET  final_payment_status = 'PS002'
	    	,final_payment_date = NOW()
	    WHERE contract_no = #{contractNo}
	</update>

	<!-- 기업회원 계약서 목록 -->
	<select id="getContractList" resultType="com.example.trade.dto.Contract">
		SELECT DISTINCT 
			 c.contract_no AS contractNo
			,c.down_payment AS downPayment
			,c.down_payment_status AS downPaymentStatus
			,c.down_payment_date AS downPaymentDate
			,c.final_payment AS finalPayment
			,c.final_payment_status AS finalPaymentStatus
			,c.final_payment_date AS finalPaymentDate
			,c.create_user AS createUser
			,c.create_date AS createDate
		FROM contract c
			INNER JOIN quotation q ON c.quotation_no = q.quotation_no
			INNER JOIN product_request pr ON q.product_request_no = pr.product_request_no
		WHERE pr.create_user = #{userId}
		ORDER BY c.contract_no ASC
	</select>
	
	<!-- 기업회원 계약서 상세 -->
	<select id="getContractOne" resultType="com.example.trade.dto.Contract">
		SELECT DISTINCT 
			 c.contract_no AS contractNo
			,c.quotation_no AS quotationNo
			,c.down_payment AS downPayment
			,c.final_payment AS finalPayment
			,c.create_date AS createDate
			,pr.product_name AS productName
			,pr.product_option AS productOption
			,pr.product_quantity AS productQuantity
			,qi.price AS price
	        ,q.create_date AS quotationCreateDate
	    FROM contract c
	    JOIN quotation q ON c.quotation_no = q.quotation_no
	    LEFT JOIN quotation_item qi ON q.quotation_no = qi.quotation_no
	    JOIN product_request pr ON qi.product_request_no = pr.product_request_no
        AND qi.sub_product_request_no = pr.sub_product_request_no
		WHERE pr.create_user = #{userId} AND contract_no = #{contractNo}
	</select>
	
</mapper>