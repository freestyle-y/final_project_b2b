<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.trade.mapper.QuotationMapper">
	<!-- 관리자 전체 견적서 목록 -->
	<select id="getAllAdminQuotations"
		resultMap="QuotationWithItems">
		SELECT
		q.quotation_no AS quotation_no,
		q.product_request_no AS quotation_product_request_no,
		q.status AS status,
		q.create_user AS create_user,
		q.create_date AS create_date,
		qi.item_id AS item_id,
		qi.quotation_no AS quotation_no,
		qi.product_request_no AS item_product_request_no,
		qi.sub_product_request_no AS sub_product_request_no,
		qi.price AS price,
		pr.product_name AS product_name,
		pr.product_option AS product_option,
		pr.product_quantity AS product_quantity,
		pr.create_user AS requestCompanyUser,
		u.name AS requestCompanyName
		FROM quotation q
		LEFT JOIN quotation_item qi ON q.quotation_no = qi.quotation_no
		LEFT JOIN product_request pr
		ON qi.product_request_no = pr.product_request_no
		AND qi.sub_product_request_no = pr.sub_product_request_no
		LEFT JOIN user u ON pr.create_user = u.id -- ✅ user 테이블과 조인
		WHERE q.use_status = 'Y'
		ORDER BY q.product_request_no ASC, q.quotation_no DESC
	</select>


	<!-- 기업회원 견적서 목록 -->
	<select id="getQuotationList" resultMap="QuotationWithItems">
		SELECT
		q.quotation_no AS quotation_no,
		q.product_request_no AS quotation_product_request_no,
		q.status AS status,
		q.create_user AS create_user,
		q.create_date AS create_date,
		qi.item_id AS item_id,
		qi.quotation_no AS quotation_no,
		qi.product_request_no AS item_product_request_no,
		qi.sub_product_request_no AS sub_product_request_no,
		qi.price AS price,
		pr.product_name AS product_name,
		pr.product_option AS product_option,
		pr.product_quantity AS product_quantity
		FROM quotation q
		LEFT JOIN quotation_item qi ON q.quotation_no = qi.quotation_no
		LEFT JOIN product_request pr
		ON qi.product_request_no = pr.product_request_no
		AND qi.sub_product_request_no = pr.sub_product_request_no
		WHERE pr.create_user = #{userId}
		ORDER BY q.quotation_no DESC
	</select>

	<!-- 기업회원 견적서 상세 -->
	<select id="getQuotationOne" resultMap="QuotationWithItems">
		SELECT
		q.quotation_no AS quotation_no,
		q.product_request_no AS quotation_product_request_no,
		q.status AS status,
		q.refusal_reason AS refusalReason,
		q.create_user AS create_user,
		q.create_date AS create_date,
		qi.item_id AS item_id,
		qi.quotation_no AS quotation_no,
		qi.product_request_no AS item_product_request_no,
		qi.sub_product_request_no AS sub_product_request_no,
		qi.price AS price,
		pr.product_name AS product_name,
		pr.product_option AS product_option,
		pr.product_quantity AS product_quantity
		FROM quotation q
		LEFT JOIN quotation_item qi ON q.quotation_no = qi.quotation_no
		LEFT JOIN product_request pr
		ON qi.product_request_no = pr.product_request_no
		AND qi.sub_product_request_no = pr.sub_product_request_no
		WHERE q.quotation_no = #{quotationNo}
	</select>

	<!-- 관리자 견적서 목록 -->
	<select id="getAdminQuotationList"
		resultMap="QuotationWithItems">
		SELECT
		q.quotation_no AS quotation_no,
		q.product_request_no AS quotation_product_request_no,
		q.status AS status,
		q.refusal_reason AS refusalReason,
		q.create_user AS create_user,
		q.create_date AS create_date,
		qi.item_id AS item_id,
		qi.quotation_no AS quotation_no,
		qi.product_request_no AS item_product_request_no,
		qi.sub_product_request_no AS sub_product_request_no,
		qi.price AS price,
		pr.product_name AS product_name,
		pr.product_option AS product_option,
		pr.product_quantity AS product_quantity,
		pr.create_user AS requestCompanyUser, -- 기업 ID
		u.name AS requestCompanyName -- 기업 이름 ✅ 추가
		FROM quotation q
		LEFT JOIN quotation_item qi ON q.quotation_no = qi.quotation_no
		LEFT JOIN product_request pr
		ON qi.product_request_no = pr.product_request_no
		AND qi.sub_product_request_no = pr.sub_product_request_no
		LEFT JOIN user u ON pr.create_user = u.id -- ✅ 조인 추가
		WHERE q.product_request_no = #{productRequestNo}
		AND q.use_status = 'Y'
		ORDER BY q.quotation_no DESC
	</select>


	<!-- 관리자 견적서 상세 -->
	<select id="adminQuotationOne" resultMap="QuotationWithItems">
		SELECT
		q.quotation_no AS quotation_no,
		q.product_request_no AS quotation_product_request_no,
		q.status AS status,
		q.create_user AS create_user,
		q.create_date AS create_date,
		qi.item_id AS item_id,
		qi.quotation_no AS quotation_no,
		qi.product_request_no AS item_product_request_no,
		qi.sub_product_request_no AS sub_product_request_no,
		qi.price AS price,
		pr.product_name AS product_name,
		pr.product_option AS product_option,
		pr.product_quantity AS product_quantity
		FROM quotation q
		LEFT JOIN quotation_item qi ON q.quotation_no = qi.quotation_no
		LEFT JOIN product_request pr
		ON qi.product_request_no = pr.product_request_no
		AND qi.sub_product_request_no = pr.sub_product_request_no
		WHERE q.product_request_no = #{productRequestNo}
	</select>

	<!-- 견적 작성용: product_request 불러오기 -->
	<select id="getProductRequestForQuotation"
		resultType="com.example.trade.dto.QuotationItem">
		SELECT
		pr.product_request_no AS productRequestNo,
		pr.sub_product_request_no AS subProductRequestNo,
		pr.product_name AS productName,
		pr.product_option AS productOption,
		pr.product_quantity AS productQuantity
		FROM product_request pr
		WHERE pr.product_request_no = #{productRequestNo}
	</select>

	<!-- 견적서 insert -->
	<insert id="insertQuotationMaster" useGeneratedKeys="true"
		keyProperty="quotationNo">
		INSERT INTO quotation (
		product_request_no, status, create_user, use_status, create_date
		) VALUES (
		#{productRequestNo}, '승인전', #{createUser}, 'Y', NOW()
		)
	</insert>

	<!-- 견적서 상품 insert -->
	<insert id="insertQuotationItem">
		INSERT INTO quotation_item (
		quotation_no, product_request_no, sub_product_request_no, price
		) VALUES (
		#{quotationNo}, #{productRequestNo}, #{subProductRequestNo}, #{price}
		)
	</insert>

	<!-- 견적 승인 -->
	<update id="updateStatusAtApprove">
		UPDATE quotation
		SET status = '승인'
		WHERE quotation_no = #{quotationNo}
	</update>

	<!-- 견적 거절 -->
	<update id="updateStatusAtReject">
		UPDATE quotation
		SET status = '승인거절',
		update_user = #{userId},
		refusal_reason = #{rejectionReason},
		update_date = NOW()
		WHERE quotation_no = #{quotationNo}
	</update>

	<delete id="deleteQuotationItemsByQuotationNo">
		DELETE FROM quotation_item WHERE quotation_no = #{quotationNo}
	</delete>

	<delete id="deleteQuotation">
		DELETE FROM quotation
		WHERE quotation_no =
		#{quotationNo}
		AND product_request_no = #{productRequestNo}
	</delete>

	<update id="updateQuotationItem">
		UPDATE quotation_item
		SET price = #{price}
		WHERE item_id = #{itemId}
	</update>


	<select id="getContractExist" resultType="int">
		SELECT COUNT(contract_no)
		FROM contract
		WHERE quotation_no = #{quotationNo}
	</select>
	
	<!-- ResultMap 정의 -->
	<resultMap id="QuotationWithItems"
		type="com.example.trade.dto.Quotation">
		<id property="quotationNo" column="quotation_no" />
		<result property="productRequestNo"
			column="quotation_product_request_no" />
		<result property="status" column="status" />
		<result column="refusalReason"    property="refusalReason"/>
		<result property="createUser" column="create_user" />
		<result property="createDate" column="create_date" />
		<result property="requestCompanyUser"
			column="requestCompanyUser" />
		<result property="requestCompanyName"
			column="requestCompanyName" />
		<collection property="items"
			ofType="com.example.trade.dto.QuotationItem">
			<id property="itemId" column="item_id" />
			<result property="quotationNo" column="quotation_no" />
			<result property="productRequestNo"
				column="item_product_request_no" />
			<result property="subProductRequestNo"
				column="sub_product_request_no" />
			<result column="price" property="price" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
			<result property="productName" column="product_name" />
			<result property="productOption" column="product_option" />
			<result property="productQuantity" column="product_quantity" />
		</collection>
	</resultMap>

	<update id="updateProductRequest" parameterType="int">
		UPDATE product_request
		SET status = '확인완료'
		WHERE product_request_no = #{productRequestNo}
	</update>

</mapper>
