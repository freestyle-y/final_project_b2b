<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.trade.mapper.ProductMapper">

	<!-- 상품 후기 -->
	<select id="reviewList" resultType="map">
		SELECT 
			u.name,
			o.product_name AS productName,
			o.option_name_value AS optionNameValue,
			o.review,
			o.grade
		FROM `order` o
		INNER JOIN user u
			ON o.user_id = u.id
		WHERE review IS NOT NULL 
	</select>

	<!-- 상품 목록(찜 많은순) -->
	<select id="productListByWish" resultType="map">
		SELECT
			p.product_no AS productNo,
		    p.product_name AS productName,
		    IFNULL(w.wish_count, 0) AS wishCount
		FROM 
		    product p
		LEFT JOIN (
		    SELECT 
		        product_no, 
		        COUNT(*) AS wish_count
		    FROM 
		        wish_list
		    WHERE 
		        use_status = 'Y'
		    GROUP BY 
		        product_no
		) w ON p.product_no = w.product_no
		WHERE 
		    p.use_status = 'Y'
		GROUP BY 
		    p.product_no
		ORDER BY 
		    wish_count DESC
		LIMIT 0, 10
	</select>

	<!-- 개인 찜 목록 보기 -->
	<select id="wishList" parameterType="String" resultType="map">
		SELECT 
			p.product_no AS productNo, 
		    p.product_name AS productName, 
		    c.category_name AS categoryName, 
		    p.use_status AS productUseStatus
		FROM wish_list w
		INNER JOIN product p
		    ON w.product_no = p.product_no
		INNER JOIN category c
			 ON p.category_id = c.category_id
		WHERE w.user_id = #{id}
		  AND w.use_status = 'Y'
		GROUP BY p.product_no;
	</select>
	
	<!-- 개인 장바구니 목록 보기 -->
	<select id="shoppingCart" parameterType="String" resultType="map">
		SELECT 
			sc.user_no AS userNo,
			p.product_no AS productNo, 
			p.option_no AS optionNo,
			p.product_name AS productName,
			o.option_name_value AS optionNameValue,
			sc.quantity,
			CASE p.product_status
		        WHEN 'GS001' THEN '판매대기'
		        WHEN 'GS002' THEN '판매중'
		        WHEN 'GS003' THEN '일시품절'
		        WHEN 'GS004' THEN '영구중단'
		        ELSE '알수없음'
		    END AS productStatus,
			p.price,
			p.use_status AS useStatus
		FROM shopping_cart sc
		INNER JOIN product p
			ON sc.product_no = p.product_no
			AND sc.option_no = p.option_no
		INNER JOIN `option` o
			ON p.option_no = o.option_no
		WHERE sc.user_no = #{id}
			AND sc.use_status = 'Y'
	</select>
	
	<!-- 카테고리(대분류) 목록 -->
	<select id="majorCategory" resultType="com.example.trade.dto.Category">
		SELECT
			category_id AS categoryId,
			category_name AS categoryName
		FROM category
		WHERE parent_category = 0
	</select>
	
	<!-- 카테고리(중분류) 목록 -->
	<select id="middleCategory" parameterType="String" resultType="com.example.trade.dto.Category">
		SELECT
			category_id AS categoryId,
			category_name AS categoryName
		FROM category
		WHERE parent_category = #{id}
	</select>
	
	<!-- 카테고리별 상품 목록 보기 -->
	<select id="productListByCategory" parameterType="String" resultType="map">
		WITH category_path AS (
		    SELECT 
		        c1.category_id AS category_id,
		        CASE 
		            WHEN c3.category_id IS NOT NULL THEN c3.category_id
		            WHEN c2.category_id IS NOT NULL THEN c2.category_id
		            ELSE c1.category_id
		        END AS category_id_lv1,
		
		        CASE 
		            WHEN c3.category_id IS NOT NULL THEN c2.category_id
		            WHEN c2.category_id IS NOT NULL THEN c1.category_id
		            ELSE NULL
		        END AS category_id_lv2,
		
		        CASE 
		            WHEN c3.category_id IS NOT NULL THEN c1.category_id
		            ELSE NULL
		        END AS category_id_lv3
		    FROM category c1
		    LEFT JOIN category c2 ON c1.parent_category = c2.category_id
		    LEFT JOIN category c3 ON c2.parent_category = c3.category_id
		)
		SELECT 
		    p.product_no AS productNo,
		    p.product_name AS productName,
		    p.price,
		    CASE p.product_status
		        WHEN 'GS001' THEN '판매대기'
		        WHEN 'GS002' THEN '판매중'
		        WHEN 'GS003' THEN '일시품절'
		        WHEN 'GS004' THEN '영구중단'
		        ELSE '알수없음'
		    END AS productStatus,
		    cp.category_id_lv1 AS categoryIdLv1,
		    cp.category_id_lv2 AS categoryIdLv2,
		    cp.category_id_lv3 AS categoryIdLv3
		FROM product p
		LEFT JOIN category_path cp ON p.category_id = cp.category_id
		WHERE p.use_status = 'Y'
		AND (#{parentId} IS NULL OR category_id_lv1 = #{parentId})
		AND (#{middleId} IS NULL OR category_id_lv2 = #{middleId})
		GROUP BY product_no
	</select>
	
	<!-- 상품 상세 페이지 보기 -->
	<select id="productOne" resultType="map">
		SELECT
		    p.product_no AS productNo,
		    p.product_name AS productName,
		    o.option_name_value AS optionNameValue,
		    p.price,
		    i.quantity,
		    CASE WHEN w.user_id IS NOT NULL THEN 1 ELSE 0 END AS isWish
		FROM product p
		INNER JOIN `option` o 
			ON p.option_no = o.option_no
		INNER JOIN inventory i 
			ON i.product_no = p.product_no 
			AND i.option_no = p.option_no
		LEFT JOIN wish_list w 
			ON w.product_no = p.product_no 
			AND w.user_id = #{id}
		WHERE p.product_no = #{productNo}
	</select>
	
	<!-- 상품별 리뷰 보기 -->
	<select id="productReview" parameterType="int" resultType="map">
		SELECT 
			u.name,
			o.product_name AS productName,
			o.option_name_value AS optionNameValue,
			o.review,
			o.grade
		FROM `order` o
		INNER JOIN user u
			ON o.user_id = u.id
		WHERE review IS NOT NULL
			AND o.product_no = #{productNo}
		order BY grade DESC
	</select>
	
	<!-- 상품별 평균 평점 -->
	<select id="avgProductRate" parameterType="int" resultType="double">
		SELECT AVG(grade) AS avgGrade
		FROM `order`
		WHERE product_no = #{productNo}
	</select>
</mapper>