<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.trade.mapper.AdminMapper">
	<!-- 자주 묻는 질문(FAQ) 목록 -->
	<select id="selectFAQList" parameterType="com.example.trade.dto.Page" resultType="map">
		SELECT
			board_no AS boardNo,
			board_title AS boardTitle,
			board_content AS boardContent,
			create_user AS createUser,
			create_date AS createDate,
			update_user AS updateUser,
			update_date AS updateDate,
			use_status AS useStatus,
			view_count AS viewCount
		FROM board
		WHERE board_code = 'BC001'
		<if test="searchWord != null and searchWord != ''">
			AND board_title LIKE CONCAT('%', #{searchWord}, '%')
		</if>
		ORDER BY board_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 자주 묻는 질문(FAQ) 전체 행 수 조회 -->
	<select id="selectFAQTotalCount" parameterType="com.example.trade.dto.Page" resultType="int">
		SELECT COUNT(*)
		FROM board
		WHERE board_code = 'BC001'
		<if test="searchWord != null and searchWord != ''">
			AND board_title LIKE CONCAT('%', #{searchWord}, '%')
		</if>
	</select>
	
	<!-- 자주 묻는 질문(FAQ) 상세 조회 -->
	<select id="selectFAQOne" parameterType="com.example.trade.dto.Board" resultType="com.example.trade.dto.Board">
		SELECT
			board_no AS boardNo,
			board_title AS boardTitle,
			board_content AS boardContent,
			create_user AS createUser,
			create_date AS createDate,
			update_user AS updateUser,
			update_date AS updateDate,
			use_status AS useStatus,
			view_count AS viewCount
		FROM board
		WHERE board_no = #{boardNo}
	</select>
	
	<!-- 자주 묻는 질문(FAQ) 등록 -->
	<insert id="insertBoard" parameterType="com.example.trade.dto.Board" useGeneratedKeys="true" keyProperty="boardNo">
	INSERT INTO board
		(board_title, board_content, board_code, create_user)
	VALUES
		(#{boardTitle}, #{boardContent}, #{boardCode}, #{createUser})
	</insert>
	
	<!-- FAQ 수정 -->
	<update id="updateBoard" parameterType="com.example.trade.dto.Board">
		UPDATE board SET
			board_title = #{boardTitle},
			board_content = #{boardContent},
			update_user = #{updateUser},
			update_date = NOW(),
			use_status = #{useStatus}
		WHERE board_no = #{boardNo}
	</update>
	
	<!-- FAQ 삭제 -->
	<update id="deleteBoard" parameterType="com.example.trade.dto.Board">
		UPDATE board SET
			update_user = #{updateUser},
			update_date = NOW(),
			use_status = 'N'
		WHERE board_no = #{boardNo}
	</update>

	<!-- QNA 목록 조회 -->
	<select id="selectQNAListById" parameterType="com.example.trade.dto.Page" resultType="map">
		SELECT
			board_no AS boardNo,
			board_title AS boardTitle,
			board_content AS boardContent,
			create_user AS createUser,
			create_date AS createDate,
			update_user AS updateUser,
			update_date AS updateDate,
			use_status AS useStatus,
			view_count AS viewCount
		FROM board
		WHERE board_code = 'BC002'
		<if test="searchWord != null and searchWord != ''">
			AND board_title LIKE CONCAT('%', #{searchWord}, '%')
		</if>
		ORDER BY board_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- QNA 목록 전체 행 수 조회 -->
	<select id="selectQNATotalCount" parameterType="com.example.trade.dto.Page" resultType="int">
		SELECT COUNT(*)
		FROM board
		WHERE board_code = 'BC002'
		<if test="searchWord != null and searchWord != ''">
			AND board_title LIKE CONCAT('%', #{searchWord}, '%')
		</if>
	</select>
	
	<!-- QNA 상세 조회 -->
	<select id="selectQNAOne" parameterType="com.example.trade.dto.Board" resultType="map">
		SELECT
			board_no AS boardNo,
			board_title AS boardTitle,
			board_content AS boardContent,
			board_code AS boardCode,
			create_user AS createUser,
			create_date AS createDate,
			update_user AS updateUser,
			update_date AS updateDate,
			use_status AS useStatus,
			view_count AS viewCount
		FROM board
		WHERE board_no = #{boardNo}
		AND board_code = 'BC002'
	</select>
	
	<!-- 댓글 조회 -->
	<select id="selectCommentByBoardNo" parameterType="int" resultType="map">
		SELECT
			comment_no AS commentNo,
			parent_comment_no AS parentCommentNo,
			comment_content AS commentContent,
			board_no AS boardNo,
			create_user AS createUser,
			create_date AS createDate,
			update_user AS updateUser,
			update_date AS updateDate,
			use_status AS useStatus
		FROM comment
		WHERE board_no = #{boardNo}
		AND use_status = 'Y'
		ORDER BY COALESCE(parent_comment_no, comment_no), comment_no
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="insertComment" parameterType="com.example.trade.dto.Comment">
		INSERT INTO comment (
			parent_comment_no, comment_content, board_no, create_user
		)
		VALUES (
			#{parentCommentNo}, #{commentContent}, #{boardNo}, #{createUser}
		)
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="updateComment" parameterType="com.example.trade.dto.Comment">
		UPDATE comment SET
			comment_content = #{commentContent},
			update_user = #{updateUser},
			update_date = NOW()
		WHERE comment_no = #{commentNo}
		AND board_no = #{boardNo}
		AND use_status = 'Y'
	</update>
	
	<!-- 댓글 삭제 -->
	<update id="deleteComment">
		UPDATE comment SET
			update_user = #{updateUser},
			update_date = NOW(),
			use_status = 'N'
		WHERE comment_no = #{commentNo}
		AND board_no = #{boardNo}
		AND create_user = #{updateUser}
	</update>
	
	<!-- 공지사항 목록 조회 -->
	<select id="selectNoticeList" parameterType="com.example.trade.dto.Page" resultType="map">
		SELECT
			board_no AS boardNo,
			board_title AS boardTitle,
			board_content AS boardContent,
			create_user AS createUser,
			create_date AS createDate,
			update_user AS updateUser,
			update_date AS updateDate,
			use_status AS useStatus,
			view_count AS viewCount
		FROM board
		WHERE board_code = 'BC003'
		<if test="searchWord != null and searchWord != ''">
			AND board_title LIKE CONCAT('%', #{searchWord}, '%')
		</if>
		ORDER BY board_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 공지사항 전체 행 수 조회 -->
	<select id="selectNoticeTotalCount" parameterType="com.example.trade.dto.Page" resultType="int">
		SELECT COUNT(*)
		FROM board
		WHERE board_code = 'BC003'
		<if test="searchWord != null and searchWord != ''">
			AND board_title LIKE CONCAT('%', #{searchWord}, '%')
		</if>
	</select>
	
	<!-- 공지사항 상세 조회 -->
	<select id="selectNoticeOne" parameterType="int" resultType="com.example.trade.dto.Board">
		SELECT
			board_no AS boardNo,
			board_title AS boardTitle,
			board_content AS boardContent,
			board_code AS boardCode,
			create_user AS createUser,
			create_date AS createDate,
			update_user AS updateUser,
			update_date AS updateDate,
			use_status AS useStatus,
			view_count AS viewCount
		FROM board
		WHERE board_no = #{boardNo}
	</select>
	
	<!-- 공지사항 수정 -->
	<update id="updateNotice" parameterType="com.example.trade.dto.Board">
		UPDATE board SET
			board_title = #{boardTitle},
			board_content = #{boardContent},
			update_user = #{updateUser},
			update_date = NOW(),
			use_status = #{useStatus}
		WHERE board_no = #{boardNo}
		AND board_code = 'BC003'
	</update>
	
	<!-- 공지사항 삭제 -->
	<update id="deleteNotice" parameterType="com.example.trade.dto.Board">
		UPDATE board SET
			update_user = #{updateUser},
			update_date = NOW(),
			use_status = 'N'
		WHERE board_no = #{boardNo}
		AND board_code = 'BC003'
	</update>
	
	<!-- 로그인 이력 조회 -->
	<select id="selectLoginHistory" resultType="map">
		SELECT
			login_history_no AS loginHistoryNo,
			id,
			login_time AS loginTime
		FROM login_history
	</select>
	
	<!-- 알림 목록 조회 -->
	<select id="selectAlarmList" resultType="map">
		SELECT
			n.notification_no AS notificationNo,
			CASE n.target_type
				WHEN 'USER' THEN CONCAT('ID : ', n.target_value)
				WHEN 'ROLE' THEN ct.code_name
				WHEN 'ALL'  THEN '전체회원'
			END AS targetDisplay,
			
			CASE n.notification_type
				WHEN 'NC001' THEN '주문'
				WHEN 'NC002' THEN '배송'
				WHEN 'NC003' THEN '결제'
				WHEN 'NC004' THEN '이벤트'
				WHEN 'NC005' THEN '시스템'
				WHEN 'NC006' THEN '기타'
			END AS notificationType,
			
			n.notification_title AS notificationTitle,
			n.notification_content AS notificationContent,
			n.target_url AS targetUrl,
			n.image_url AS imageUrl,
			n.read_status AS readStatus,
			n.read_date AS readDate,
			n.create_user AS createUser,
			n.create_date AS createDate,
			n.update_user AS updateUser,
			n.update_date AS updateDate,
			n.use_status AS useStatus
		FROM notification n LEFT JOIN comm_tbl ct
		ON n.target_value = ct.code_number
	</select>
	
	<!-- 기업 회원의 배송 현황 조회 -->
	<select id="selectBizDeliveryList" resultType="map">
		SELECT
			co.contract_no AS contractNo,
			co.order_time AS orderTime,
			cd.container_no AS containerNo,
			ct.container_location AS containerLocation,
			co.arrival_time AS arrivalTime,
			a.address,
			a.detail_address AS detailAddress,
			cd.contract_delivery_time AS contractDeliveryTime,
			CASE cd.contract_delivery_status
				WHEN 'DS001' THEN '배송대기'
				WHEN 'DS002' THEN '배송중'
				WHEN 'DS003' THEN '배송완료'
			END AS contractDeliveryStatus
		FROM contract_delivery cd INNER JOIN address a ON cd.address_no = a.address_no
		INNER JOIN container ct ON cd.container_no = ct.container_no
		INNER JOIN contract_order co ON ct.contract_order_no = co.contract_order_no
	</select>
	
	<!-- 개인 회원 배송 현황 조회 -->
	<select id="selectPersonalDeliveryList" parameterType="com.example.trade.dto.Page" resultType="map">
		SELECT 
			o.order_no AS orderNo,
			o.sub_order_no AS subOrderNo,
			o.product_name AS productName,
			o.option_name_value AS optionNameValue,
			o.order_quantity AS orderQuantity,
			o.price,
			ct1.code_name AS orderStatus,
			o.delivery_status AS deliveryStatusCode,
			ct2.code_name AS deliveryStatus,
			u.id AS userId,
			u.name AS userName,
			u.phone,
			a.address,
			a.detail_address AS detailAddress,
			a.postal
		FROM `order` o INNER JOIN `user` u ON o.user_id = u.id
		INNER JOIN `address` a ON o.address_no = a.address_no
		LEFT JOIN comm_tbl ct1 ON o.order_status = ct1.code_number
		LEFT JOIN comm_tbl ct2 ON o.delivery_status = ct2.code_number
		WHERE u.customer_category = 'CC003'
		<if test="searchWord != null and searchWord != ''">
			AND (o.order_no LIKE CONCAT('%', #{searchWord}, '%')
			OR u.id LIKE CONCAT('%', #{searchWord}, '%'))
		</if>
		ORDER BY o.order_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 개인 회원 배송 전체 행 수 조회 -->
	<select id="selectPersonalDeliveryTotalCount" parameterType="com.example.trade.dto.Page" resultType="int">
		SELECT COUNT(*)
		FROM `order` o INNER JOIN `user` u ON o.user_id = u.id
		INNER JOIN `address` a ON o.address_no = a.address_no
		LEFT JOIN comm_tbl ct1 ON o.order_status = ct1.code_number
		LEFT JOIN comm_tbl ct2 ON o.delivery_status = ct2.code_number
		WHERE u.customer_category = 'CC003'
		<if test="searchWord != null and searchWord != ''">
			AND (o.order_no LIKE CONCAT('%', #{searchWord}, '%')
			OR u.id LIKE CONCAT('%', #{searchWord}, '%'))
		</if>
	</select>
	
	<!-- 개인 회원 배송 상태 변경 -->
	<update id="updatePersonalDelivery" parameterType="com.example.trade.dto.Order">
		UPDATE `order` SET
			delivery_status = #{deliveryStatus},
			update_user = #{updateUser},
			update_date = NOW()
		WHERE order_no = #{orderNo}
		AND sub_order_no = #{subOrderNo}
	</update>
	
	<!-- 배송 이력 저장 -->
	<insert id="insertDeliveryHistory" parameterType="com.example.trade.dto.DeliveryHistory">
		INSERT INTO delivery_history (
			order_no, sub_order_no, delivery_company, tracking_no, delivery_status
		)
		VALUES (
			#{orderNo}, #{subOrderNo}, #{deliveryCompany}, #{trackingNo}, #{deliveryStatus}
		)
	</insert>
</mapper>